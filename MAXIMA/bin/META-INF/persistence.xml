<?xml version="1.0" encoding="UTF-8"?>
<persistence version="1.0"
	xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd">
    <!-- unidade de persistencia onde vamos chamar no java e  mostrar que iremos usar as configurações a seguir  -->
    <persistence-unit name="mohr" transaction-type="RESOURCE_LOCAL">  
    	<provider>org.hibernate.ejb.HibernatePersistence</provider>  
       
        <properties>
       		<!-- mapeamento automático,indentifica as classes que tem anotações específicas para que essas classes sejas entidades/tabelas  -->
       		<property name="hibernate.archive.autodetection" value="class" />
       		 
            <!-- Conexão com o banco de dados e onde está o banco de dados -->
			<property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>
			<property name="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/maxima"/>
			<property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>
			<property name="hibernate.connection.username" value="postgres"/>
			<property name="hibernate.connection.password" value="admin"/>

<!--             <property name="hibernate.hbm2ddl.auto" value="create" /> -->
			<!-- vai tentar atualizar as tabelas caso existam ou criar uma nova caso não exista -->
            <property name="hibernate.hbm2ddl.auto" value="update"/>
 
            <!--Configuracoes de Debug-->
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />
			<property name="use_sql_comments" value="true" />
			
		</properties>
    </persistence-unit>
</persistence>